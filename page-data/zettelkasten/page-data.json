{
    "componentChunkName": "component---src-templates-note-jsx",
    "path": "/zettelkasten",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Zettelkasten\",\n  \"tags\": [\"pkm\", \"zettelkasten\", \"learning\", \"notes\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Zettelkasten is a Note Taking Process and a Knowledge Management System. It has 3 types of notes\\u2026\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fleeting notes: Temporary notes for remembering\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Literature Notes: Fleeting notes combined and cleanup. Will be a summary of the content.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"permanent-notes\",\n    \"title\": \"Permanent Notes\"\n  }, \"Permanent Notes\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"title":"Zettelkasten","date":"2022-02-12T22:19:22.030Z"},"frontmatter":{"tags":["pkm","zettelkasten","learning","notes"],"source":null}}},"pageContext":{"title":"Zettelkasten","slug":"/zettelkasten","refersTo":["Permanent Notes"],"referredBy":[{"title":"Digital Garden","excerpt":"A digital garden is an online space at the intersection of a notebook and a blog, where digital gardeners share seeds of thoughts to be…","slug":"/digital-garden"},{"title":"Gatsby Garden","excerpt":"Gatsby Garden  lets you create a static HTML version of your [ markdown ] notes. You can convert your Obsidian [ Zettelkasten ] Notes into a…","slug":"/gatsby-garden"},{"title":"Markdown","excerpt":"Markdown is a lightweight markup language for creating formatted text using a plain-text editor. The Basics You should be able to  do this…","slug":"/markdown"}]}},
    "staticQueryHashes": ["1408915841","342892192"]}