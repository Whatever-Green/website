{"version":3,"file":"component---src-pages-index-jsx-6a9ba1c053ee47c587a0.js","mappings":"yKAGMA,EAASC,EAAQ,MAER,SAASC,EAAT,GAA8B,IAAVC,EAAS,EAATA,MACjC,OACE,uBAAKC,UAAU,8BACZD,EAAME,KAAI,SAACC,EAAMC,GAAP,OACT,uBACEH,UAAU,qBACVI,IAAKD,EACLE,KAAK,SACLC,SAAUH,EACVI,QAAS,YACPC,EAAAA,EAAAA,IAASN,EAAKO,KAAKC,OAAOC,OAE5BC,UAAW,SAAAC,GACa,KAAlBA,EAAMC,UAAgBN,EAAAA,EAAAA,IAASN,EAAKO,KAAKC,OAAOC,QAGtD,sBAAIX,UAAU,cACZ,gBAAC,KAAD,CAAMe,GAAE,GAAKb,EAAKO,KAAKC,OAAOC,MAC3BT,EAAKO,KAAKC,OAAOM,QAGtB,qBAAGhB,UAAU,gBACVE,EAAKO,KAAKC,OAAOO,QACdf,EAAKO,KAAKC,OAAOO,QACjBf,EAAKO,KAAKQ,SAEhB,qBAAGjB,UAAU,iBAAb,eACe,IACZE,EAAKO,KAAKS,aAAehB,EAAKO,KAAKS,YAAYC,KAC5CjB,EAAKO,KAAKS,YAAYC,KAAKlB,KAAI,SAACmB,EAAKjB,GAAN,OAC7B,wBAAMC,IAAKD,GACT,gBAAC,KAAD,CAAMY,GAAE,SAAWK,GAAnB,IAA4BA,GAC3BjB,EAAQD,EAAKO,KAAKS,YAAYC,KAAKE,OAAS,EAAI,KAAO,OAG5D,WAEN,qBAAGrB,UAAU,aAAb,gBACgBJ,EAAO,IAAI0B,KAAKpB,EAAKO,KAAKC,OAAOa,OAAOC,kB,kJClCnD,SAASC,IACtB,IAAMvB,GAAOwB,EAAAA,EAAAA,IAAe,cAkCtBC,GAAUC,EAAAA,EAAAA,IAAqB,YAErC,OAAO1B,EAAK2B,SACV,gBAAC,IAAD,CAAQb,MAAOd,EAAK2B,SAASnB,OAAOM,MAAOc,KAAK,QAC9C,uBAAK9B,UAAU,kBACb,uBAAKA,UAAU,aACb,sBAAIA,UAAU,cAAcE,EAAK2B,SAASnB,OAAOM,OACjD,uBACEhB,UAAU,eACV+B,wBAAyB,CAAEC,OAAQ9B,EAAK2B,SAASI,WAMzD,gBAAC,IAAD,CAAQjB,MAAM,OAAOc,KAAK,QACxB,uBAAK9B,UAAU,kBACb,uBAAKA,UAAU,SACb,0BAAKkC,IAAAA,aAAAA,OACL,qBAAGlC,UAAU,QAAQkC,IAAAA,aAAAA,cAGvB,uBAAKlC,UAAU,kBACb,gBAAC,KAAD,CAAUmC,KAAMR,KAGlB,uBAAK3B,UAAU,SACb,gBAAC,IAAD,CAAQoC,KAAK,SAASC,aAAa,KAGrC,uBAAKrC,UAAU,SACb,gBAAC,IAAD,CAAUD,MAAOG,EAAKH,MAAMuC,SAG9B,2BACA,gBAAC,KAAD,CAAMvB,GAAG,YAAT","sources":["webpack://gatsby-garden/./src/components/note-list.jsx","webpack://gatsby-garden/./src/pages/index.jsx"],"sourcesContent":["import React from 'react'\nimport { Link, navigate } from 'gatsby'\nimport '../styles/note.css'\nconst moment = require('moment')\n\nexport default function NoteList({ notes }) {\n  return (\n    <div className=\"block note-cards note-list\">\n      {notes.map((data, index) => (\n        <div\n          className=\"note-area box-feed\"\n          key={index}\n          role=\"button\"\n          tabIndex={index}\n          onClick={() => {\n            navigate(data.node.fields.slug)\n          }}\n          onKeyDown={event => {\n            if (event.keycode === 13) navigate(data.node.fields.slug)\n          }}\n        >\n          <h4 className=\"note-title\">\n            <Link to={`${data.node.fields.slug}`}>\n              {data.node.fields.title}\n            </Link>\n          </h4>\n          <p className=\"note-excerpt\">\n            {data.node.fields.excerpt\n              ? data.node.fields.excerpt\n              : data.node.excerpt}\n          </p>\n          <p className=\"note-tag-list\">\n            Tagged with:{' '}\n            {data.node.frontmatter && data.node.frontmatter.tags\n              ? data.node.frontmatter.tags.map((tag, index) => (\n                  <span key={index}>\n                    <Link to={`/tags/${tag}`}>#{tag}</Link>\n                    {index < data.node.frontmatter.tags.length - 1 ? ', ' : ''}\n                  </span>\n                ))\n              : 'No Tags'}\n          </p>\n          <p className=\"note-date\">\n            Published on {moment(new Date(data.node.fields.date)).fromNow()}\n          </p>\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\nimport { graphql, useStaticQuery, Link } from 'gatsby'\nimport Layout from '../layout/layout'\nimport siteConfig from '../../gatsby-config'\nimport NoteList from '../components/note-list'\nimport Search from '../components/search'\nimport '../styles/index.css'\nimport { DefaultMenuStructure, MenuRoot } from '../utils/menu-structure'\n\nexport default function Home() {\n  const data = useStaticQuery(graphql`\n    query HomeQuery {\n      homeNote: mdx(fields: { slug: { eq: \"/home\" } }) {\n        html\n        fields {\n          title\n          date\n        }\n        frontmatter {\n          tags\n        }\n      }\n      notes: allMdx(\n        filter: { fields: { visibility: { eq: \"public\" } } }\n        limit: 5\n        sort: { fields: fields___date, order: DESC }\n      ) {\n        edges {\n          node {\n            excerpt\n            fields {\n              slug\n              title\n              date\n            }\n            frontmatter {\n              tags\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const tagList = DefaultMenuStructure('tag-list')\n\n  return data.homeNote ? (\n    <Layout title={data.homeNote.fields.title} type=\"home\">\n      <div className=\"column is-half\">\n        <div className=\"note-area\">\n          <h1 className=\"note-title\">{data.homeNote.fields.title}</h1>\n          <div\n            className=\"note-content\"\n            dangerouslySetInnerHTML={{ __html: data.homeNote.html }}\n          ></div>\n        </div>\n      </div>\n    </Layout>\n  ) : (\n    <Layout title=\"Home\" type=\"home\">\n      <div className=\"column is-half\">\n        <div className=\"block\">\n          <h1>{siteConfig.siteMetadata.title}</h1>\n          <p className=\"lead\">{siteConfig.siteMetadata.description}</p>\n        </div>\n\n        <div className=\"block tag-list\">\n          <MenuRoot menu={tagList} />\n        </div>\n\n        <div className=\"block\">\n          <Search size=\"medium\" showExcerpt={true} />\n        </div>\n\n        <div className=\"block\">\n          <NoteList notes={data.notes.edges} />\n        </div>\n\n        <br />\n        <Link to=\"/sitemap\">All Notes...</Link>\n      </div>\n    </Layout>\n  )\n}\n"],"names":["moment","require","NoteList","notes","className","map","data","index","key","role","tabIndex","onClick","navigate","node","fields","slug","onKeyDown","event","keycode","to","title","excerpt","frontmatter","tags","tag","length","Date","date","fromNow","Home","useStaticQuery","tagList","DefaultMenuStructure","homeNote","type","dangerouslySetInnerHTML","__html","html","siteConfig","menu","size","showExcerpt","edges"],"sourceRoot":""}